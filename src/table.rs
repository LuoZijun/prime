// Lists of Primes at the Prime Pages
// https://primes.utm.edu/lists/
use crate::Primality;

// NOTE: 已确定的 从 1 至 65535（含）奇数序列范围内的素数表。
//       512 * 8 / 1024 = 4K 大小
//       该表由 `scripts/table_gen.rs` 脚本生成。
static SMALL_PRIME_TABLE: [u64; 512] = [
    0x76d32d265948b681, 0x4c325261b0416984, 0x932c205a04869125, 0x228861948b411452, 0x0c02424c84992c10, 0xd260a44221125128, 0xa0420c36102d02d0, 0x05108a48149120a6, 
    0x190c320169224801, 0x8442488293208403, 0x4cb4190000922010, 0x816916410da41044, 0x129145029a642009, 0x6002c20c22490096, 0x0841101025b08248, 0x060300244b448610, 
    0x2120d84180cb0880, 0x4005220344068928, 0x300265204b290490, 0x29044a0010084532, 0x0041808a0810d125, 0xa4590c22810832c0, 0x40a44a0110922104, 0x0a4c001845028824, 
    0x1480218080058250, 0x48a2006c10006494, 0xc141860301200808, 0xb60044121a643043, 0x08129124041a04a2, 0x1124009840a40308, 0x16102880534c1401, 0x0020d26400c80906, 
    0x4101a40b0080084c, 0x30c26184880010c2, 0x2420120830094900, 0xc204b40060901124, 0x02034c90904100ca, 0x0110016982810002, 0x1208121069121a04, 0x94c3010440290649, 
    0x00048144220805a0, 0x0209809204205000, 0x24912c12c8013403, 0x41940024a2100010, 0x196c204a21200b20, 0x00510922414ca618, 0x0900504080024014, 0x022520490c208861, 
    0x104200344a201093, 0x2106124890992422, 0x002400c028840008, 0x80584ca011040202, 0x6090c32102800c06, 0x1840168809304045, 0x2000619491282441, 0x4082100120980110, 
    0x0848164225200040, 0x8608603008008048, 0x0804c029844248a6, 0x1829305020148028, 0x945025020b000280, 0x09208204b4024112, 0x830400080c801024, 0x209a212400409441, 
    0x00861a4012816812, 0x0800848860005305, 0x02400020890d0042, 0x20308160901228a4, 0x4904a48805005061, 0x308340120004a210, 0x4c00196020c84400, 0x4120128128224148, 
    0x24180802c201140b, 0x20048124261b0034, 0x9048108245000040, 0x8253048203088018, 0x2520182504482904, 0xc10502404c220120, 0x0018003002610651, 0x00261148a0804100, 
    0x5245808308869020, 0x80110006802d0210, 0x6080c00110022920, 0x5104940140304a40, 0x8042210001212640, 0x4c12000c22024484, 0x004010c305200b04, 0x021868020200144a, 
    0x0910412880180810, 0x904102500504c901, 0x100300044a00a080, 0x0802886030410000, 0xd209225900140109, 0x20526090c2401400, 0x2c801800a6900122, 0xc000244041861228, 
    0x82004814002c108a, 0x20a0480914912106, 0x4808920864029241, 0x0089088050240211, 0x08320820000a4534, 0x020912500d800a48, 0x1000252090051449, 0x4000c20884400482, 
    0x814c001020304a00, 0x8492210408408081, 0x0812024480802196, 0x830c801340221100, 0x308040b403488600, 0x0500030c02804810, 0xd004000129028021, 0x02004c00082100d0, 
    0x2400806094512182, 0x010810102932c001, 0x800269028204040a, 0x44a4914502022504, 0x4061148004845208, 0x100028100220a442, 0x4084c20820490084, 0x880532184490c021, 
    0x8291082041442480, 0x2810102110830090, 0x420d82514000016c, 0x2092052489000040, 0x2982494080106010, 0x9000800b68149101, 0x060000168009300a, 0x0480020102420c82, 
    0x0004a48160029200, 0x1080489200050418, 0x0ca0806500082414, 0x0040041304001148, 0x3009490040648042, 0x6892002024424080, 0x1101305801100800, 0x0640292211009688, 
    0x0c10480524c82100, 0x4100a6030814000c, 0x20c0048088608013, 0x0100430410084130, 0xc840304a6002000d, 0x8602088019612008, 0x2110492806820182, 0x5808208144028204, 
    0x944a0082102c0608, 0x0014800802002110, 0x4209041220204a40, 0x001004200041b000, 0x41024008a0120402, 0x9900008060240300, 0x1641208448082210, 0x20000265040b6890, 
    0x9324824004309049, 0x02480000020090c2, 0x2104194080882400, 0xc22400c00910820c, 0x241a043201411008, 0x24a4816082900804, 0x1808220108005224, 0xb0802914010c0003, 
    0x4006082130400090, 0x4041801008204304, 0x1690602018000088, 0x0910d00884414030, 0x086d100064008240, 0x8052248458042401, 0x00224000b4024000, 0xd129040800040965, 
    0x02c8003488618680, 0x0182084020810c12, 0x1204140a01845108, 0x2010089008081242, 0x05304149060304a0, 0x4b04028000201041, 0xb441400012018212, 0x0800892020c02100, 
    0x4320160000260344, 0x02104c2290610089, 0x4014800026120024, 0x080900c200844a61, 0x82d1090402041011, 0x2022c80400402106, 0x810924020c001008, 0x10104080082004c2, 
    0x2d02094816800132, 0x1800100348920208, 0x2458008291243208, 0x00204a0890520482, 0x1244968828100860, 0x2401211400080002, 0x0880106410126014, 0x0028804221205004, 
    0x0080411000412448, 0x2002020502090820, 0x0944020804340108, 0x14c200201a008081, 0x0812900484c12000, 0x4225220000360805, 0x22120100c1011293, 0x00000040a0080d20, 
    0xc820940849021020, 0x2241440098040098, 0x0480810906510082, 0x0340a20820004045, 0x9002088492048042, 0x0c34002822804420, 0x4049109120840108, 0xa080040282012000, 
    0x4890020d261a4c80, 0x1009008220908301, 0x8610090059002480, 0x48104064a0416010, 0x1000041204001824, 0x12c0400088009000, 0x2180520880190020, 0x1861000300048101, 
    0x20080ca0002d3052, 0x4194894014000422, 0x0300348901028045, 0x00482090c3040010, 0x4030084420000034, 0x886100030000484c, 0x029101020240a00a, 0x61064125065048b2, 
    0x0109104801904028, 0x1280240451002209, 0x20208040008b4800, 0x502002004c848124, 0x1098210440201091, 0x0124404016184122, 0x4200840200148001, 0xa241040288013040, 
    0x0024020980020404, 0x0a04149800029004, 0x1001200602010410, 0x0c92902c00882424, 0x4100824300204940, 0x2401003040050080, 0x60068220840b0080, 0x8000124821208948, 
    0x1000242200488218, 0x64308201004a2004, 0x9000240904121840, 0x00c045900b280051, 0x21a4520004192802, 0x0045a00000000228, 0x801a043401210090, 0x0404894010400d82, 
    0x100c009008001840, 0x8440400000242210, 0x4806004d22484030, 0x0301021304200a04, 0xa0000d20d02094ca, 0x0086120c00410494, 0x006800ca4404c208, 0x120001204b000200, 
    0x4522c00194002010, 0x032026020c149021, 0x220a018440490003, 0x0806114410010000, 0x182120c169008104, 0xa04000a21121008a, 0x04048a6182d22900, 0x0100108804321a01, 
    0x20c060049100a010, 0x44a0090002004190, 0x0a00000005824304, 0x100068100264840b, 0x0910810982004022, 0x1008305061900920, 0x00130520100c0491, 0x2100884434020010, 
    0x400d801240809004, 0x20c0200001400642, 0x0c84520822904000, 0x8024004841840125, 0x0408402089050218, 0x20004060969000a0, 0x1a40800000120000, 0x00c04904002c8013, 
    0x0412100c10420104, 0x8909168020024840, 0x8600481080050088, 0x2084122024490030, 0x8021200000804869, 0x0280058211441411, 0x0022420124482880, 0x4209065808208108, 
    0x12106094c1400240, 0x24260108a0010802, 0x4040104221809004, 0x200a0006880c02c8, 0x40208100901004a2, 0x5208860964301040, 0x8489000640200040, 0x0030106010122110, 
    0x8840000125005a04, 0x0011202040009000, 0x2810922804130020, 0x8905029a01004808, 0x000101a600002000, 0x0102980084c02106, 0x0320245848860101, 0x1040209042480410, 
    0x2c20090480800500, 0xd00010894902402c, 0x0211088698400002, 0x20a4030116102084, 0x0144200005308021, 0x0482001051000451, 0x0012112020884110, 0x0261909225020008, 
    0x808045200a013001, 0x0012410580184882, 0x8020128200248000, 0x0011280040001680, 0x0410524410c10100, 0x912080430000002c, 0x2000411440408252, 0x09a0414090012420, 
    0x8200804901148028, 0x000a0432080d20c2, 0x2584092080400022, 0x1200261060004204, 0x104049805200040a, 0x4ca4094420900010, 0x8801848008a0004c, 0x101129101024b083, 
    0x0102d00402184820, 0x0044020864a08341, 0x00800c2440448210, 0x24125800a44b4814, 0x420020020c820040, 0x00c804248b211091, 0x01204a0022182500, 0x0060048908904204, 
    0x24020c1400210202, 0x0110082090102002, 0x1044009840000001, 0x3440408480090402, 0x0030002c121a0480, 0xc220040128000900, 0xb6880000020400c0, 0x0802110ca05200a6, 
    0x082410182114c001, 0x04420d0200089698, 0x2000000120432000, 0x8000a00044a41069, 0x204044000b089480, 0x0506100820806822, 0x0840144041120221, 0x0409441401200002, 
    0x2024000194c00806, 0x1200008105008a04, 0x308b008082042049, 0x00000849004220a0, 0x8061020108044a04, 0x840008125040000b, 0x4882120120000012, 0x904420002400c208, 
    0x0650002248043410, 0x0422002190026010, 0x8300020104001948, 0x1208450400211203, 0x0804094810194100, 0x500520c00014c300, 0x2242082010200200, 0x00a0080084c00120, 
    0x1148960800201020, 0x2040211292200418, 0x4026010c10804000, 0x4a48921004821108, 0x12102c008061a00b, 0x0000c12184024082, 0x0801120245048a00, 0x0092008009040218, 
    0x40024044a0020110, 0x4108041800a08041, 0x021a002081099480, 0x0526004402804500, 0x1820b00000060129, 0x064108b0010c3048, 0x0400004802030484, 0x1a4082080122c040, 
    0x20c8099410002203, 0x0084006400580180, 0xc82804502804004c, 0x8610000242049001, 0x6080810106420016, 0x0941104201204001, 0x90d0200019003081, 0x6022122114c04900, 
    0x8001025000308140, 0x108a201409400490, 0x0806000090810530, 0x0025900040140104, 0x0040402081282000, 0x2090884806020480, 0x120c028800105061, 0x000020068120800b, 
    0x4082180900500400, 0x8360801001265308, 0x209901128041040a, 0x0912012104094400, 0x9800201804240861, 0x0243002448082200, 0x6810082400486080, 0x1009004840b20801, 
    0x020a4400c2088000, 0x0c84500000802800, 0x0821208308945000, 0x8051000480483092, 0x0420810012802006, 0x0148301008125220, 0x140800140221a20a, 0x0806086022800190, 
    0x0061804205000900, 0xa009440282001001, 0x40100300801a0c92, 0x9028008240304001, 0x029100241008a009, 0x4c02504110004886, 0x0020840044200824, 0x1050208008000402, 
    0x2120114404094800, 0xca6024802002d028, 0x064140b008093010, 0x0490002890010124, 0x4100028040228004, 0x3002210250088200, 0x0ca0900122100404, 0x400092c204840004, 
    0x00806d1002201040, 0x0180820102100824, 0x0004204861900348, 0x8481282000400491, 0x2d224801008b0096, 0x0201004248001820, 0x0092608440201440, 0x2180030816000410, 
    0x0200108908808124, 0x204b083211610008, 0x0130402800510902, 0x1804840125001a24, 0x04080806830c8212, 0x40129000029040a0, 0x8841045204241840, 0x30084430502000c0, 
    0x6012122020400084, 0x0121001800304048, 0x800028a041088291, 0x4810022584802112, 0x4008060240140028, 0x100205048a480043, 0x0080580c02914832, 0x4001000028808005, 
    0x8418448418600280, 0x0100092012400c20, 0x1000a01124101220, 0x2440600001000000, 0x08a6880900504120, 0xc320061224204940, 0x2211010218609401, 0x0880000022130884, 
    0x910c00d205800828, 0x004029020004a600, 0x4530024404814804, 0x4120800800101100, 0x0088012042010282, 0x2800024c34012420, 0x980000890004c100, 0xa002049080210202, 
    0x0404880002820904, 0x0000020949121860, 0x10810112802c2408, 0x04200004201860b4, 0x0908800009005044, 0x8000440088218080, 0x0004110022004480, 0x0065024060048800, 
    0x8013052051001498, 0x01004a0524484890, 0x1024801200200024, 0x0240211000201202, 0x0906504480112810, 0x804010cb00040309, 0x24080000800d1050, 0x0500010080900004, 
    0x4a40a40024204021, 0x2408490240050200, 0x4410882010804400, 0x422800900984000c, 0x3600003000449009, 0x0814020004030400, 0x0900028041a04848, 0x9083208601401481, 
    0x2400922010086194, 0x820184500c921109, 0x0082209481018290, 0x0002480802000802, 0x1240a00140840204, 0x001a040600091200, 0x0114030112000022, 0x0140009060004840, 
    0x80000810c108a248, 0x0034102022000404, 0x0308048000a01304, 0x2019081008002440, 0x6802110086114824, 0x0165004200100860, 0x120205000a042081, 0x2502180010080180, 
];


fn query(n: u16) -> bool {
    // NOTE: SMALL_PRIME_TABLE 里面存储的是奇数序列，
    //       所以查询的时候需要确保查询的数字是奇数。
    debug_assert!(n % 2 != 0);
    
    let pos = (n as usize - 1) / 2;
    let i = pos / 64;
    let r = pos % 64;

    let mask = SMALL_PRIME_TABLE[i];

    (mask << r >> 63) == 1
}

pub fn table_query_u16(n: u16) -> Primality {
    match n {
        0 | 1 => Primality::ZeroOrOne,
        2 => Primality::Prime,
        _ => {
            if n % 2 == 0 {
                // NOTE: 偶数当中，除了 2 之外都不是质数。
                Primality::Composite
            } else {
                Primality::from(query(n))
            }
        }
    }
}


#[bench]
fn bench_table_query_u16(b: &mut test::Bencher) {
    let n = test::black_box(u16::MAX);
    
    b.iter(|| {
        table_query_u16(n)
    })
}